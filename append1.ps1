####################################################################################
#「CVSS_Vector_String」の各項目を縦に並び替え、新たなファイルに保存する処理
####################################################################################
#-----------------------------------------------------------------------------------
#「blank.txt」の内容を変数strにセット
$str = Get-Content blank.txt

#半角スペースを除去
$str = $str.Replace(' ', '')

#「/」で分割し、変数arrayにセット
$array = $str.split("/")

#変数arrayを「append1.txt」に書き出す
$array | Out-File append1.txt
#-----------------------------------------------------------------------------------

####################################################################################
#「CVSS_Vector_String」の各項目を置換する処理
####################################################################################
#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「AV:N」を含む行を「AV:N/[ネットワーク (N)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントをネットワーク経由でリモートから攻撃可能である。例えば、インターネットからの攻撃など」に置換する
$data.Replace("AV:N", "AV:N/[ネットワーク (N)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントをネットワーク経由でリモートから攻撃可能である。例えば、インターネットからの攻撃など") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「AV:A」を含む行を「AV:A/[隣接ネットワーク (A)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントを隣接ネットワークから攻撃する必要がある。例えば、ローカルIPサブネット、ブルートゥース、IEEE 802.11など」に置換する
$data.Replace("AV:A", "AV:A/[隣接ネットワーク (A)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントを隣接ネットワークから攻撃する必要がある。例えば、ローカルIPサブネット、ブルートゥース、IEEE 802.11など") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「AV:L」を含む行を「AV:L/[ローカル (L)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントをローカル環境から攻撃する必要がある。例えば、ローカルアクセス権限での攻撃が必要、ワープロのアプリケーションに不正なファイルを読み込ませる攻撃が必要など」に置換する
$data.Replace("AV:L", "AV:L/[ローカル (L)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントをローカル環境から攻撃する必要がある。例えば、ローカルアクセス権限での攻撃が必要、ワープロのアプリケーションに不正なファイルを読み込ませる攻撃が必要など") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「AV:P」を含む行を「AV:P/[物理 (P)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントを物理アクセス環境から攻撃する必要がある。例えば、IEEE 1394、USB経由で攻撃が必要など」に置換する
$data.Replace("AV:P", "AV:P/[物理 (P)]・・・攻撃元区分(脆弱性のあるコンポーネントをどこから攻撃可能であるかを評価します。): Attack Vector (AV)※補足:対象コンポーネントを物理アクセス環境から攻撃する必要がある。例えば、IEEE 1394、USB経由で攻撃が必要など") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「AC:L」を含む行を「AC:L/[低 (L)]・・・攻撃条件の複雑さ(脆弱性のあるコンポーネントを攻撃する際に必要な条件の複雑さを評価します。): Attack Complexity (AC)※補足:特別な攻撃条件を必要とせず、対象コンポーネントを常に攻撃可能である。」に置換する
$data.Replace("AC:L", "AC:L/[低 (L)]・・・攻撃条件の複雑さ(脆弱性のあるコンポーネントを攻撃する際に必要な条件の複雑さを評価します。): Attack Complexity (AC)※補足:特別な攻撃条件を必要とせず、対象コンポーネントを常に攻撃可能である。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「AC:H」を含む行を「AC:H/[高 (H)]・・・攻撃条件の複雑さ(脆弱性のあるコンポーネントを攻撃する際に必要な条件の複雑さを評価します。): Attack Complexity (AC)
#                               ※補足:攻撃者以外に依存する攻撃条件が存在する。例えば、次のいずれかの条件に合致する場合などが該当する。
#                               攻撃者は、設定情報、シーケンス番号、共有鍵など、攻撃対象の情報収集が事前に必要となる。
#                               攻撃者は、競合が発生する条件、ヒープスプレイを成功させるための条件など、攻撃を成功させるための環境条件を明らかにする必要がある。
#                               攻撃者は、中間者攻撃のため環境が必要となる。」に置換する
$data.Replace("AC:H", "AC:H/[高 (H)]・・・攻撃条件の複雑さ(脆弱性のあるコンポーネントを攻撃する際に必要な条件の複雑さを評価します。): Attack Complexity (AC)※補足:攻撃者以外に依存する攻撃条件が存在する。例えば、次のいずれかの条件に合致する場合などが該当する。攻撃者は、設定情報、シーケンス番号、共有鍵など、攻撃対象の情報収集が事前に必要となる。攻撃者は、競合が発生する条件、ヒープスプレイを成功させるための条件など、攻撃を成功させるための環境条件を明らかにする必要がある。攻撃者は、中間者攻撃のため環境が必要となる。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「PR:N」を含む行を「PR:N/[不要 (N)]・・・攻撃に必要な特権レベル(脆弱性のあるコンポーネントを攻撃する際に必要な特権のレベルを評価します。): Privileges Required (PR)※補足:特別な権限を有する必要はない。」に置換する
$data.Replace("PR:N", "PR:N/[不要 (N)]・・・攻撃に必要な特権レベル(脆弱性のあるコンポーネントを攻撃する際に必要な特権のレベルを評価します。): Privileges Required (PR)※補足:特別な権限を有する必要はない。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「PR:L」を含む行を「PR:L/[低 (L)]・・・攻撃に必要な特権レベル(脆弱性のあるコンポーネントを攻撃する際に必要な特権のレベルを評価します。): Privileges Required (PR)※補足:コンポーネントに対する基本的な権限を有していれば良い。例えば、秘密情報以外にアクセスできるなど」に置換する
$data.Replace("PR:L", "PR:L/[低 (L)]・・・攻撃に必要な特権レベル(脆弱性のあるコンポーネントを攻撃する際に必要な特権のレベルを評価します。): Privileges Required (PR)※補足:コンポーネントに対する基本的な権限を有していれば良い。例えば、秘密情報以外にアクセスできるなど") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「PR:H」を含む行を「PR:H/[高 (H)]・・・攻撃に必要な特権レベル(脆弱性のあるコンポーネントを攻撃する際に必要な特権のレベルを評価します。): Privileges Required (PR)※補足:コンポーネントに対する管理者権限相当を有する必要がある。例えば、秘密情報にアクセスできるなど」に置換する
$data.Replace("PR:H", "PR:H/[高 (H)]・・・攻撃に必要な特権レベル(脆弱性のあるコンポーネントを攻撃する際に必要な特権のレベルを評価します。): Privileges Required (PR)※補足:コンポーネントに対する管理者権限相当を有する必要がある。例えば、秘密情報にアクセスできるなど") | Out-File -FilePath append1.txt
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「UI:N」を含む行を「UI:N/[不要 (N)]・・・利用者の関与(脆弱性のあるコンポーネントを攻撃する際に必要なユーザ関与レベルを評価します。): User Interaction (UI)※補足:ユーザが何もしなくても脆弱性が攻撃される可能性がある。」に置換する
$data.Replace("UI:N", "UI:N/[不要 (N)]・・・利用者の関与(脆弱性のあるコンポーネントを攻撃する際に必要なユーザ関与レベルを評価します。): User Interaction (UI)※補足:ユーザが何もしなくても脆弱性が攻撃される可能性がある。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「UI:R」を含む行を「UI:R/[要 (R)]・・・利用者の関与(脆弱性のあるコンポーネントを攻撃する際に必要なユーザ関与レベルを評価します。): User Interaction (UI)※補足:リンクのクリック、ファイル閲覧、設定の変更など、ユーザ動作が必要である。」に置換する
$data.Replace("UI:R", "UI:R/[要 (R)]・・・利用者の関与(脆弱性のあるコンポーネントを攻撃する際に必要なユーザ関与レベルを評価します。): User Interaction (UI)※補足:リンクのクリック、ファイル閲覧、設定の変更など、ユーザ動作が必要である。") | Out-File -FilePath append1.txt
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「S:U」を含む行を「S:U/[変更なし (U)]・・・影響の想定範囲(脆弱性のあるコンポーネントへの攻撃による影響範囲を評価します。): Scope (S)※補足:影響範囲が脆弱性のあるコンポーネントの帰属するオーソリゼーションスコープに留まる。」に置換する
$data.Replace("S:U", "S:U/[変更なし (U)]・・・影響の想定範囲(脆弱性のあるコンポーネントへの攻撃による影響範囲を評価します。): Scope (S)※補足:影響範囲が脆弱性のあるコンポーネントの帰属するオーソリゼーションスコープに留まる。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「S:C」を含む行を「S:C/[変更あり (C)]・・・影響の想定範囲(脆弱性のあるコンポーネントへの攻撃による影響範囲を評価します。): Scope (S)※補足:影響範囲が脆弱性のあるコンポーネントの帰属するオーソリゼーションスコープ以外にも広がる可能性がある。例えば、クロスサイトスクリプティング、リフレクター攻撃に悪用される可能性のある脆弱性など」に置換する
$data.Replace("S:C", "S:C/[変更あり (C)]・・・影響の想定範囲(脆弱性のあるコンポーネントへの攻撃による影響範囲を評価します。): Scope (S)※補足:影響範囲が脆弱性のあるコンポーネントの帰属するオーソリゼーションスコープ以外にも広がる可能性がある。例えば、クロスサイトスクリプティング、リフレクター攻撃に悪用される可能性のある脆弱性など") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「C:N」を含む行を「C:N/[なし (N)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:機密性への影響はない」に置換する
$data.Replace("C:N", "C:N/[なし (N)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:機密性への影響はない") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「C:L」を含む行を「C:L/[低 (L)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:情報漏えいやアクセス制限の回避などが発生はするが、その問題による影響が限定的である。」に置換する
#$data.Replace("C:L", "C:L/[低 (L)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:情報漏えいやアクセス制限の回避などが発生はするが、その問題による影響が限定的である。") | Out-File -FilePath append1.txt 
$data = $data -replace "^C:L", "C:L/[低 (L)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:情報漏えいやアクセス制限の回避などが発生はするが、その問題による影響が限定的である。" | Out-File -FilePath append1.txt
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「C:H」を含む行を「C:H/[高 (H)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:機密情報や重要なシステムファイルが参照可能であり、その問題による影響が全体に及ぶ。」に置換する
#$data.Replace("C:H", "C:H/[高 (H)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:機密情報や重要なシステムファイルが参照可能であり、その問題による影響が全体に及ぶ。") | Out-File -FilePath append1.txt 
$data = $data -replace "^C:H", "C:H/[高 (H)]・・・機密性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が漏えいする可能性を評価します。): Confidentiality (C)※補足:機密情報や重要なシステムファイルが参照可能であり、その問題による影響が全体に及ぶ。" | Out-File -FilePath append1.txt
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「I:N」を含む行を「I:N/[なし (N)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:完全性への影響はない」に置換する
#$data.Replace("I:N", "I:N/[なし (N)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:完全性への影響はない") | Out-File -FilePath append1.txt 
$data = $data -replace "^I:N", "I:N/[なし (N)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:完全性への影響はない" | Out-File -FilePath append1.txt
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「I:L」を含む行を「I:L/[低 (L)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:情報の改ざんが可能ではあるが、機密情報や重要なシステムファイルの改ざんはできないために、その問題による影響が限定的である。」に置換する
$data.Replace("I:L", "I:L/[低 (L)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:情報の改ざんが可能ではあるが、機密情報や重要なシステムファイルの改ざんはできないために、その問題による影響が限定的である。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「I:H」を含む行を「I:H/[高 (H)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:機密情報や重要なシステムファイルの改ざんが可能で、その問題による影響が全体に及ぶ。」に置換する
$data.Replace("I:H", "I:H/[高 (H)]・・・完全性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の情報が改ざんされる可能性を評価します。): Integrity (I)※補足:機密情報や重要なシステムファイルの改ざんが可能で、その問題による影響が全体に及ぶ。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「A:N」を含む行を「A:N/[なし (N)]・・・可用性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の業務が遅延・停止する可能性を評価します。): Availability (A)※補足:可用性への影響はない」に置換する
$data.Replace("A:N", "A:N/[なし (N)]・・・可用性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の業務が遅延・停止する可能性を評価します。): Availability (A)※補足:可用性への影響はない") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「A:L」を含む行を「A:L/[低 (L)]・・・可用性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の業務が遅延・停止する可能性を評価します。): Availability (A)※補足:リソースを一時的に枯渇させたり、業務の遅延や一時中断が可能である。」に置換する
$data.Replace("A:L", "A:L/[低 (L)]・・・可用性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の業務が遅延・停止する可能性を評価します。): Availability (A)※補足:リソースを一時的に枯渇させたり、業務の遅延や一時中断が可能である。") | Out-File -FilePath append1.txt 
#-----------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------
#「append1.txt」の内容を変数dataにセット
$data=Get-Content append1.txt

#「A:H」を含む行を「A:H/[高 (H)]・・・可用性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の業務が遅延・停止する可能性を評価します。): Availability (A)※補足:リソース(ネットワーク帯域、プロセッサ処理、ディスクスペースなど)を完全に枯渇させたり、完全に停止させることが可能である。」に置換する
$data.Replace("A:H", "A:H/[高 (H)]・・・可用性への影響(脆弱性を攻撃された際に、対象とする影響想定範囲の業務が遅延・停止する可能性を評価します。): Availability (A)※補足:リソース(ネットワーク帯域、プロセッサ処理、ディスクスペースなど)を完全に枯渇させたり、完全に停止させることが可能である。") | Out-File -FilePath append1.txt
#-----------------------------------------------------------------------------------
